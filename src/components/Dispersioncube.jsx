/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/dispersioncube.gltf 
*/
import * as THREE from 'three'
import React from 'react'
import { MeshTransmissionMaterial, Text, useGLTF } from '@react-three/drei'
import { useControls } from 'leva'




export function Dispersioncube(props) {
    const config = useControls({
        meshPhysicalMaterial: false,
        transmissionSampler: false,
        backside: false,
        samples: { value: 10, min: 1, max: 32, step: 1 },
        resolution: { value: 2048, min: 256, max: 2048, step: 256 },
        transmission: { value: 1, min: 0, max: 1 },
        roughness: { value: 0.0, min: 0, max: 1, step: 0.01 },
        thickness: { value: 3.5, min: 0, max: 10, step: 0.01 },
        ior: { value: 1.5, min: 1, max: 5, step: 0.01 },
        chromaticAberration: { value: 0.06, min: 0, max: 1 },
        anisotropy: { value: 0.1, min: 0, max: 1, step: 0.01 },
        distortion: { value: 1, min: 0, max: 1, step: 0.01 },
        distortionScale: { value: 0.3, min: 0.01, max: 1, step: 0.01 },
        clearcoat: { value: 0, min: 0, max: 1 },
        attenuationColor: '#ffffff',
        color: '#ffffff',
        bg: '#000000'
    })

  const { nodes, materials } = useGLTF('./models/dispersioncube.gltf')
  return (
    <group dispose={null}>
        <Text>test</Text>
      <mesh geometry={nodes.WÃ¼rfel.geometry} /*material={materials.Mat}*/ >
      {config.meshPhysicalMaterial ? <meshPhysicalMaterial {...config} /> : <MeshTransmissionMaterial background={new THREE.Color(config.bg)} {...config} />} 
      </mesh>
    </group>
  )
}

useGLTF.preload('./models/dispersioncube.gltf')
